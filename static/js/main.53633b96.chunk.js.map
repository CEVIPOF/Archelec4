{"version":3,"sources":["helpers/helpers.js","data/data.js","components/Form.js","components/Table.js","components/App.js","serviceWorker.js","index.js"],"names":["cleanStr","str","toLowerCase","replace","dataTest","identifiant","election","annee","mois","departement","circ","tour","type","rang","nom","prenom","sexe","age","profession","mandat_public_en_cours","mandat_public_passe","assoc","autre_statut","decorations","partis_en_soutien","liste","initialState","Form","state","handleChange","event","target","name","value","setState","submitForm","props","handleSubmit","this","Component","TableHeader","TableBody","rows","data","map","row","index","key","Table","App","formData","loadedData","search","keys","Object","filter","obj","undefined","find","objectValue","filterValue","length","includes","filterData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+MAIaA,EAAW,SAACC,GACvB,OAAOA,EAAIC,cAAcC,QAAQ,oBAAS,MCU/BC,EACb,CACG,CACGC,YAAa,iCACbC,SAAU,IACVC,MAAO,OACPC,KAAM,KACNC,YAAa,KACbC,KAAM,KACNC,KAAM,IACNC,KAAM,KACNC,KAAM,eACNC,IAAK,SACLC,OAAQ,mBACRC,KAAM,IACNC,IAAK,KACLC,WAAY,KACZC,uBAAwB,KACxBC,oBAAqB,KACrBC,MAAO,KACPC,aAAc,KACdC,YAAa,MACbC,kBAAmB,oBACnBC,MAAO,sCAEV,CACGpB,YAAa,iCACbC,SAAU,IACVC,MAAO,OACPC,KAAM,KACNC,YAAa,KACbC,KAAM,KACNC,KAAM,IACNC,KAAM,KACNC,KAAM,eACNC,IAAK,UACLC,OAAQ,mBACRC,KAAM,IACNC,IAAK,KACLC,WAAY,KACZC,uBAAwB,KACxBC,oBAAqB,KACrBC,MAAO,6BACPC,aAAc,cACdC,YAAa,MACbC,kBAAmB,KACnBC,MAAO,qDAEV,CACGpB,YAAa,iCACbC,SAAU,IACVC,MAAO,OACPC,KAAM,KACNC,YAAa,KACbC,KAAM,KACNC,KAAM,IACNC,KAAM,KACNC,KAAM,eACNC,IAAK,UACLC,OAAQ,OACRC,KAAM,IACNC,IAAK,KACLC,WAAY,KACZC,uBAAwB,KACxBC,oBAAqB,KACrBC,MAAO,KACPC,aAAc,KACdC,YAAa,MACbC,kBAAmB,KACnBC,MAAO,sD,OClFPC,EAAe,CAClBrB,YAAa,GACbC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,YAAa,GACbC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,WAAY,GACZC,uBAAwB,GACxBC,oBAAqB,GACrBC,MAAO,GACPC,aAAc,GACdC,YAAa,GACbC,kBAAmB,GACnBC,MAAO,IA+WKE,E,4MA3WbC,MAAQF,E,EAERG,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,WAAa,WACX,EAAKC,MAAMC,aAAa,EAAKT,OAO7B,EAAKM,SAASR,I,uDAGN,IAAD,EAuBJY,KAAKV,MAvBD,EAELvB,YAFK,EAGLC,SAHK,EAILC,MAJK,EAKLC,KALK,EAMLC,YANK,EAOLC,KAPK,EAQLC,KARK,EASLC,KATK,EAULC,KAVK,EAWLC,IAXK,EAYLC,OAZK,EAaLC,KAbK,EAcLC,IAdK,EAeLC,WAfK,EAgBLC,uBAhBK,EAiBLC,oBAjBK,EAkBLC,MAlBK,EAmBLC,aAnBK,EAoBLC,YApBK,EAqBLC,kBArBK,EAsBLC,U,GA3Cac,aCxBbC,EAAc,WAClB,OACE,+BACE,4BACE,8CA4BFC,EAAY,SAACL,GACjB,IAAMM,EAAON,EAAMO,KAAKC,KAAI,SAACC,EAAKC,GAChC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIxC,iBAKf,OAAO,+BAAQqC,IAaFM,EAVD,SAACZ,GAAW,IAChBO,EAASP,EAATO,KACR,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWA,KAAMA,MClBRM,E,4MA1BbrB,MAAQ,CACNsB,SAAU,GACVC,WAAY/C,G,EAGdiC,aAAe,SAACe,GACd,EAAKlB,SAAS,CAAEgB,SAAUE,K,uDAGlB,IAAD,EAC0Bd,KAAKV,MAEhCe,EJJgB,SAACO,EAAUP,GACnC,IAAMU,EAAOC,OAAOD,KAAKH,GAczB,OAZqBP,EAAKY,QAAO,SAACC,GAShC,YAAuBC,IARHJ,EAAKK,MAAK,SAACX,GAC7B,IAAMY,EAAc3D,EAASwD,EAAIT,IAC3Ba,EAAc5D,EAASkD,EAASH,IACtC,SAAIa,EAAYC,SAAUF,EAAYG,SAASF,UIHpCG,CAHN,EACCb,SADD,EACWC,YAIlB,OACE,6BACE,oDACA,kBAAC,EAAD,CAAMd,aAAcC,KAAKD,eAEzB,4CACA,kBAAC,EAAD,CAAOM,KAAMA,S,GArBHJ,aCMEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.53633b96.chunk.js","sourcesContent":["/*  This file contains a few handy function that are used\n    all around the app.\n*/\n\nexport const cleanStr = (str) => {\n  return str.toLowerCase().replace(/éèêë/g, \"e\");\n};\n\n\n/*\n   HINT: Pour le moment la fonction filterData renvoie des résultats dès que\n   ce que l'utilisateur cherche est contenu dans une des méthadonnées\n   (ex : chercher \"test\" renverra \"test\" et \"testounet\" et \"tests\").\n   À voir si ce comportement fonctionne pour tous les types de champs.\n*/\nexport const filterData = (formData, data) => {\n  const keys = Object.keys(formData);\n\n  const filteredData = data.filter((obj) => {\n    const matchingKey = keys.find((key) => {\n      const objectValue = cleanStr(obj[key]);\n      const filterValue = cleanStr(formData[key]);\n      if (filterValue.length && objectValue.includes(filterValue)) {\n        return true;\n      }\n      return false;\n    });\n    return matchingKey !== undefined;\n  });\n\n  return filteredData;\n};\n","export const dataMock = [\n  {\n    name: \"testounet\",\n    job: \"conseiller\",\n  },\n  {\n    name: \"toto\",\n    job: \"maire\",\n  },\n  {\n    name: \"toto\",\n    job: \"conseiller\",\n  },\n];\n\nexport const dataTest = \n[\n   {\n      identifiant: \"EL174_L_1988_06_01__01_1_PF_02\",\n      election: \"L\",\n      annee: \"1988\",\n      mois: \"06\",\n      departement: \"01\",\n      circ: \"01\",\n      tour: \"1\",\n      type: \"PF\",\n      rang: \"suppléant\",\n      nom: \"Mortel\",\n      prenom: \"Jean-François\",\n      sexe: \"H\",\n      age: \"NR\",\n      profession: \"NR\",\n      mandat_public_en_cours: \"NR\",\n      mandat_public_passe: \"NR\",\n      assoc: \"NR\",\n      autre_statut: \"NR\",\n      decorations: \"non\",\n      partis_en_soutien: \"Comités Juquin\",\n      liste: \"Une nouvelle politique à gauche\"\n   },\n   {\n      identifiant: \"EL177_L_1988_06_85__04_1_PF_01\",\n      election: \"L\",\n      annee: \"1988\",\n      mois: \"06\",\n      departement: \"85\",\n      circ: \"04\",\n      tour: \"1\",\n      type: \"PF\",\n      rang: \"suppléant\",\n      nom: \"Bolteau\",\n      prenom: \"Jean-François\",\n      sexe: \"H\",\n      age: \"30\",\n      profession: \"NR\",\n      mandat_public_en_cours: \"NR\",\n      mandat_public_passe: \"NR\",\n      assoc: \"religion;non précisé\",\n      autre_statut: \"étudiant\",\n      decorations: \"non\",\n      partis_en_soutien: \"NR\",\n      liste: \"Majorité présidentielle pour la France unie\"\n   },\n   {\n      identifiant: \"EL177_L_1988_06_88__03_2_PF_02\",\n      election: \"L\",\n      annee: \"1988\",\n      mois: \"06\",\n      departement: \"88\",\n      circ: \"03\",\n      tour: \"2\",\n      type: \"PF\",\n      rang: \"suppléant\",\n      nom: \"Valroff\",\n      prenom: \"Jean\",\n      sexe: \"H\",\n      age: \"NR\",\n      profession: \"NR\",\n      mandat_public_en_cours: \"NR\",\n      mandat_public_passe: \"NR\",\n      assoc: \"NR\",\n      autre_statut: \"NR\",\n      decorations: \"non\",\n      partis_en_soutien: \"NR\",\n      liste: \"Majorité présidentielle pour la France unie\"\n   }\n]\n","import React, { Component } from \"react\";\n\nconst initialState = {\n   identifiant: \"\",\n   election: \"\",\n   annee: \"\",\n   mois: \"\",\n   departement: \"\",\n   circ: \"\",\n   tour: \"\",\n   type: \"\",\n   rang: \"\",\n   nom: \"\",\n   prenom: \"\",\n   sexe: \"\",\n   age: \"\",\n   profession: \"\",\n   mandat_public_en_cours: \"\",\n   mandat_public_passe: \"\",\n   assoc: \"\",\n   autre_statut: \"\",\n   decorations: \"\",\n   partis_en_soutien: \"\",\n   liste: \"\"\n};\n\nclass Form extends Component {\n  state = initialState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n      /*\n         La ligne suivante remet à zéro le formulaire dès que l'on submit.\n         Ne pas utiliser si l'on souhaite voir les champs remplis en même\n         temps que la recherche.\n         À compléter avec un bouton CLEAR permettant de reload le form\n      */\n    this.setState(initialState)\n  };\n\n  render() {\n    const {\n      identifiant,\n      election,\n      annee,\n      mois,\n      departement,\n      circ,\n      tour,\n      type,\n      rang,\n      nom,\n      prenom,\n      sexe,\n      age,\n      profession,\n      mandat_public_en_cours,\n      mandat_public_passe,\n      assoc,\n      autre_statut,\n      decorations,\n      partis_en_soutien,\n      liste\n   } = this.state;\n    return (\n      /*\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <select\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        >\n          <option selected value={null}></option>\n          <option value=\"testounet\">testounet</option>\n          <option value=\"toto\">toto</option>\n          <option value=\"test\">test</option>\n        </select>\n\n        <label htmlFor=\"job\">Job</label>\n        <select\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={this.state.job}\n          onChange={this.handleChange}\n        >\n          <option selected value={null}></option>\n          <option value=\"conseiller\">conseiller</option>\n          <option value=\"maire\">maire</option>\n          <option value=\"president\">president</option>\n        </select>\n\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n      */\n      <form>\n        <label htmlFor=\"election\">Élection</label>\n        <select type=\"text\" name=\"election\" id=\"election\" value={this.state.election} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"L\">Législatives</option>\n          <option value=\"P\">Présidentielles</option>\n          <option value=\"M\">Municipales</option>\n        </select>\n\n\n        <label htmlFor=\"annee\">Année de l'élection</label>\n        <select type=\"text\" name=\"annee\" id=\"annee\" value={this.state.annee} onchange={this.state.handleChange}>\n          <option value={null}></option>\n          <option value=\"2012\">2012</option>\n          <option value=\"2011\">2011</option>\n          <option value=\"2007\">2007</option>\n          <option value=\"2006\">2006</option>\n          <option value=\"2002\">2002</option>\n          <option value=\"2001\">2001</option>\n          <option value=\"1995\">1995</option>\n          <option value=\"1993\">1993</option>\n          <option value=\"1988\">1988</option>\n          <option value=\"1987\">1987</option>\n          <option value=\"1981\">1981</option>\n          <option value=\"1980\">1980</option>\n          <option value=\"1979\">1979</option>\n          <option value=\"1978\">1978</option>\n          <option value=\"1974\">1974</option>\n          <option value=\"1973\">1973</option>\n          <option value=\"1969\">1969</option>\n          <option value=\"1968\">1968</option>\n          <option value=\"1967\">1967</option>\n          <option value=\"1965\">1965</option>\n          <option value=\"1964\">1964</option>\n          <option value=\"1962\">1962</option>\n          <option value=\"1959\">1959</option>\n          <option value=\"1958\">1958</option>\n        </select>\n\n        <label htmlFor=\"mois\">Année de l'élection</label>\n        <select type=\"text\" name=\"annee\" id=\"annee\" value={this.state.mois} onchange={this.state.handleChange}>\n          <option value={null}></option>\n          <option value=\"01\">Janvier</option>\n          <option value=\"02\">Février</option>\n          <option value=\"03\">Mars</option>\n          <option value=\"04\">Avril</option>\n          <option value=\"05\">Mai</option>\n          <option value=\"06\">Juin</option>\n          <option value=\"07\">Juillet</option>\n          <option value=\"08\">Août</option>\n          <option value=\"09\">Septembre</option>\n          <option value=\"10\">Octobre</option>\n          <option value=\"11\">Novembre</option>\n          <option value=\"12\">Décembre</option>\n         </select>\n\n        <label htmlFor=\"departement\">Département</label>\n        <select type=\"text\" name=\"departement\" id=\"departement\"  value={this.state.departement} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"01\">Ain</option>\n          <option value=\"02\">Aisne</option>\n          <option value=\"03\">Allier</option>\n          <option value=\"04\">Alpes-de-Haute-Provence</option>\n          <option value=\"05\">Hautes-Alpes</option>\n          <option value=\"06\">Alpes-Maritimes</option>\n          <option value=\"07\">Ardèche</option>\n          <option value=\"08\">Ardennes</option>\n          <option value=\"09\">Ariège</option>\n          <option value=\"10\">Aube</option>\n          <option value=\"11\">Aude</option>\n          <option value=\"12\">Aveyron</option>\n          <option value=\"13\">Bouches-du-Rhône</option>\n          <option value=\"14\">Calvados</option>\n          <option value=\"15\">Cantal</option>\n          <option value=\"16\">Charente</option>\n          <option value=\"17\">Charente-Maritime</option>\n          <option value=\"18\">Cher</option>\n          <option value=\"19\">Corrèze</option>\n          <option value=\"2A\">Corse-du-Sud</option>\n          <option value=\"2B\">Haute-Corse</option>\n          <option value=\"21\">Côte-d'Or</option>\n          <option value=\"22\">Côtes d'Armor</option>\n          <option value=\"23\">Creuse</option>\n          <option value=\"24\">Dordogne</option>\n          <option value=\"25\">Doubs</option>\n          <option value=\"26\">Drôme</option>\n          <option value=\"27\">Eure</option>\n          <option value=\"28\">Eure-et-Loir</option>\n          <option value=\"29\">Finistère</option>\n          <option value=\"30\">Gard</option>\n          <option value=\"31\">Haute-Garonne</option>\n          <option value=\"32\">Gers</option>\n          <option value=\"33\">Gironde</option>\n          <option value=\"34\">Hérault</option>\n          <option value=\"35\">Ille-et-Vilaine</option>\n          <option value=\"36\">Indre</option>\n          <option value=\"37\">Indre-et-Loire</option>\n          <option value=\"38\">Isère</option>\n          <option value=\"39\">Jura</option>\n          <option value=\"40\">Landes</option>\n          <option value=\"41\">Loir-et-Cher</option>\n          <option value=\"42\">Loire</option>\n          <option value=\"43\">Haute-Loire</option>\n          <option value=\"44\">Loire-Atlantique</option>\n          <option value=\"45\">Loiret</option>\n          <option value=\"46\">Lot</option>\n          <option value=\"47\">Lot-et-Garonne</option>\n          <option value=\"48\">Lozère</option>\n          <option value=\"49\">Maine-et-Loire</option>\n          <option value=\"50\">Manche</option>\n          <option value=\"51\">Marne</option>\n          <option value=\"52\">Haute-Marne</option>\n          <option value=\"53\">Mayenne</option>\n          <option value=\"54\">Meurthe-et-Moselle</option>\n          <option value=\"55\">Meuse</option>\n          <option value=\"56\">Morbihan</option>\n          <option value=\"57\">Moselle</option>\n          <option value=\"58\">Nièvre</option>\n          <option value=\"59\">Nord</option>\n          <option value=\"60\">Oise</option>\n          <option value=\"61\">Orne</option>\n          <option value=\"62\">Pas-de-Calais</option>\n          <option value=\"63\">Puy-de-Dôme</option>\n          <option value=\"64\">Pyrénées-Atlantiques</option>\n          <option value=\"65\">Hautes-Pyrénées</option>\n          <option value=\"66\">Pyrénées-Orientales</option>\n          <option value=\"67\">Bas-Rhin</option>\n          <option value=\"68\">Haut-Rhin</option>\n          <option value=\"69\">Rhône</option>\n          <option value=\"70\">Haute-Saône</option>\n          <option value=\"71\">Saône-et-Loire</option>\n          <option value=\"72\">Sarthe</option>\n          <option value=\"73\">Savoie</option>\n          <option value=\"74\">Haute-Savoie</option>\n          <option value=\"75\">Paris</option>\n          <option value=\"76\">Seine-Maritime</option>\n          <option value=\"77\">Seine-et-Marne</option>\n          <option value=\"78\">Yvelines</option>\n          <option value=\"79\">Deux-Sèvres</option>\n          <option value=\"80\">Somme</option>\n          <option value=\"81\">Tarn</option>\n          <option value=\"82\">Tarn-et-Garonne</option>\n          <option value=\"83\">Var</option>\n          <option value=\"84\">Vaucluse></option>\n          <option value=\"85\">Vendée</option>\n          <option value=\"86\">Vienne</option>\n          <option value=\"87\">Haute-Vienne</option>\n          <option value=\"88\">Vosges</option>\n          <option value=\"89\">Yonne</option>\n          <option value=\"90\">Territoire de Belfort</option>\n          <option value=\"91\">Essonne</option>\n          <option value=\"92\">Hauts-de-Seine</option>\n          <option value=\"93\">Seine-St-Denis</option>\n          <option value=\"94\">Val-de-Marne</option>\n          <option value=\"95\">Val-D'Oise</option>\n          <option value=\"971\">Guadeloupe</option>\n          <option value=\"972\">Martinique</option>\n          <option value=\"973\">Guyane</option>\n          <option value=\"974\">La Réunion</option>\n          <option value=\"976\">Mayotte</option>\n        </select>\n\n        <label htmlFor=\"circ\">Circonscription</label>\n        <select type=\"text\" name=\"circonscription\" id=\"circonscription\" value={this.state.circ} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"01\">1ère</option>\n          <option value=\"02\">2nd</option>\n          <option value=\"03\">3ème</option>\n          <option value=\"04\">4ème</option>\n          <option value=\"05\">5ème</option>\n          <option value=\"06\">6ème</option>\n          <option value=\"07\">7ème</option>\n          <option value=\"08\">8ème</option>\n          <option value=\"09\">9ème</option>\n          <option value=\"10\">10ème</option>\n          <option value=\"11\">11ème</option>\n          <option value=\"12\">12ème</option>\n          <option value=\"13\">13ème</option>\n        </select>\n\n        <label htmlFor=\"tour\">Tour</label>\n        <select type=\"text\" name=\"tour\" id=\"tour\" value={this.state.tour} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"1\">1er</option>\n          <option value=\"2\">2nd</option>\n          <option value=\"3\">3ème</option>\n        </select>\n\n        <label htmlFor=\"type\">Type de document</label>\n        <select type=\"text\" name=\"type\" id=\"type\" value={this.state.type} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"PF\">Profession de foi</option>\n          <option value=\"autre\">Autre</option>\n        </select>\n\n\n\n\n        <label htmlFor=\"rang\">Rang du candidat</label>\n          <h6>Titulaire</h6>\n            <input name=\"rang\" type=\"radio\" id=\"rang\" value=\"titulaire\" checked={this.state.rang} onChange={this.handleChange} />\n          <h6>Suppléant</h6>\n            <input name=\"rang\" type=\"radio\" id=\"rang\" value=\"suppleant\" checked={this.state.rang} onChange={this.handleChange} />\n          <h6>Indifférencié</h6>\n            <input name=\"rang\" type=\"radio\" id=\"rang\" value={null} checked={this.state.rang} onChange={this.handleChange} />\n\n        <label htmlFor=\"nom\">Nom</label>\n        <input type=\"text\" name=\"nom\" id=\"nom\" value={nom} onChange={this.handleChange} />\n\n        <label htmlFor=\"prenom\">Prénom</label>\n        <input type=\"text\" name=\"prenom\" id=\"prenom\" value={prenom} onChange={this.handleChange} />\n\n        <label htmlFor=\"sexe\">Sexe</label>\n          <h6>Homme</h6>\n            <input name=\"sexe\" type=\"radio\" id=\"sexe\" value=\"homme\" checked={this.state.sexe} onChange={this.handleChange} />\n          <h6>Femme</h6>\n            <input name=\"sexe\" type=\"radio\" id=\"sexe\" value=\"femme\" checked={this.state.sexe} onChange={this.handleChange} />\n          <h6>Indifférencié</h6>\n            <input name=\"sexe\" type=\"radio\" id=\"sexe\" value={null} checked={this.state.sexe} onChange={this.handleChange} />\n\n\n        <label htmlFor=\"age\">Âge ou année de naissance</label>\n        <input type=\"text\" name=\"age\" id=\"age\" value={age} onChange={this.handleChange} />\n\n        <label htmlFor=\"profession\">Profession</label>\n        <input type=\"text\" name=\"profession\" id=\"profession\" value={profession} onChange={this.handleChange} />\n\n        <label htmlFor=\"mandat_public_en_cours\">Mandat public en cours</label>\n        <select type=\"text\" name=\"mandat_public_en_cours\" id=\"mandat_public_en_cours\" value={this.state.mandat_public_en_cours} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"maire\">Maire</option>\n          <option value=\"depute\">Député</option>\n          <option value=\"president\">Président</option>\n          <option value=\"ministre\">Ministre</option>\n        </select>\n\n        <label htmlFor=\"mandat_public_passe\">Mandat public passé</label>\n        <select type=\"text\" name=\"mandat_public_passe\" id=\"mandat_public_passe\" value={this.state.mandat_public_passe} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"maire\">Maire</option>\n          <option value=\"depute\">Député</option>\n          <option value=\"president\">Président</option>\n          <option value=\"ministre\">Ministre</option>\n        </select>\n\n        <label htmlFor=\"assoc\">Association</label>\n        <select type=\"text\" name=\"assoc\" id=\"assoc\" value={this.state.assoc} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"LR\">Les Républicains</option>\n          <option value=\"socialist\">Socialiste</option>\n          <option value=\"independent\">Indépendant</option>\n          <option value=\"communiste\">Communiste</option>\n          <option value=\"religion\">Religion</option>\n        </select>\n\n\n        <label htmlFor=\"autre_statut\">Autre statut</label>\n        <select type=\"text\" name=\"autre_statut\" id=\"autre_statut\" value={this.state.autre_statut} onChange={this.handleChange}>\n          <option selected value={null}></option>\n          <option value=\"étudiant\">Étudiant</option>\n        </select>\n\n         <label htmlFor=\"decorations\">Décoration(s)</label>\n           <h6>Oui</h6>\n             <input name=\"decorations\" type=\"radio\" id=\"decorations\" value=\"oui\" checked={this.state.decorations} onChange={this.handleChange} />\n           <h6>Non</h6>\n             <input name=\"decorations\" type=\"radio\" id=\"decorations\" value=\"non\" checked={this.state.decorations} onChange={this.handleChange} />\n           <h6>Non précisé</h6>\n             <input name=\"decorations\" type=\"radio\" id=\"decorations\" value={null} checked={this.state.decorations} onChange={this.handleChange} />\n\n         <label htmlFor=\"partis_en_soutien\">Parti(s) en soutien</label>\n         <input type=\"text\" name=\"partis_en_soutien\" id=\"partis_en_soutien\" value={partis_en_soutien} onChange={this.handleChange} />\n\n         <label htmlFor=\"liste\">Liste</label>\n         <input type=\"text\" name=\"liste\" id=\"liste\" value={liste} onChange={this.handleChange} />\n\n\n\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Identifiant</th>\n{/*\n        <th>Élection</th>\n        <th>Année</th>\n        <th>Mois</th>\n        <th>Département</th>\n        <th>Circonscription</th>\n        <th>Tour</th>\n        <th>Type de document</th>\n        <th>Rand du candidat</th>\n        <th>Nom</th>\n        <th>Prénom</th>\n        <th>Sexe</th>\n        <th>Âge</th>\n        <th>Profession</th>\n        <th>Mandat public en cours</th>\n        <th>Madat public passé</th>\n        <th>Association(s)</th>\n        <th>Autre statut(s)</th>\n        <th>Décorations</th>\n        <th>Partis en soutien</th>\n        <th>Liste</th>\n*/}\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.data.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.identifiant}</td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = (props) => {\n  const { data } = props;\n  return (\n    <table>\n      <TableHeader />\n      <TableBody data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { filterData } from \"../helpers/helpers\";\nimport { dataMock, dataTest } from \"../data/data\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  state = {\n    formData: {},\n    loadedData: dataTest,\n  };\n\n  handleSubmit = (search) => {\n    this.setState({ formData: search });\n  };\n\n  render() {\n    const { formData, loadedData } = this.state;\n\n    const data = filterData(formData, loadedData);\n\n    return (\n      <div>\n        <h1>Recherche avancée</h1>\n        <Form handleSubmit={this.handleSubmit} />\n\n        <h1>Résultats</h1>\n        <Table data={data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n// @flow\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\n//import './style/custom.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}